name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create nginx.conf from secret
      run: |
        echo "${{ secrets.NGINX_CONF }}" > nginx.conf
        # Проверка синтаксиса
        docker run --rm -v $(pwd)/nginx.conf:/tmp/nginx.conf nginx nginx -t -c /tmp/nginx.conf

    - name: Copy deployment files
      run: |
        mkdir -p deployment
        cp docker/docker-compose.production.yml deployment/docker-compose.yml
        cp nginx.conf deployment/nginx.conf  # Добавляем nginx.conf в deployment

    - name: Deploy to server
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "deployment/*"
        target: "/home/deploy/rails_app/"

    - name: Deploy nginx.conf to system location
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Копируем nginx.conf в системную директорию
          sudo cp /home/deploy/rails_app/nginx.conf /etc/nginx/nginx.conf
          # Проверяем синтаксис
          sudo nginx -t
          # Перезагружаем nginx
          sudo systemctl reload nginx

    - name: Run deployment on server
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /home/deploy/rails_app/

          # Pull latest images
          docker compose pull

          # Stop and remove old containers
          docker compose down

          # Start new containers
          docker compose up -d

          # Cleanup old images
          docker image prune -f

    - name: Verify deployment
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker ps
          docker compose logs --tail=50
          # Проверяем что nginx работает
          curl -I http://localhost || echo "Nginx check failed"
