name: disk-production

services:
  rails_app:
    # build:
    #   context: ../disk
    #   dockerfile: ./Dockerfile
    image: dimazyablicev/disk.prod:latest

    environment:
      RAILS_ENV: production
      BUNDLE_PATH: /usr/local/bundle
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      # SECRET_KEY_BASE должен приходить из .env.production или CI/CD
      # SECRET_KEY_BASE: ${SECRET_KEY_BASE}

    ports:
      - "3000:3000"

    volumes:
    #   - bundle_cache:/usr/local/bundle
      - rails_storage:/rails/storage
      - sqlite_data:/rails/db
      # - ./public/assets:/rails/public/assets


    working_dir: /rails
    command: bin/rails server -b 0.0.0.0 -p 3000
    # networks:
    #   - webnet

  # nginx:
  #   container_name: nginx
  #   image: nginx:latest
  #   depends_on:
  #     - rails_app
  #   volumes:
  #     # - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ../disk/public:/rails/public
  #     - ../certbot/conf:/etc/letsencrypt
  #     - ../certbot/www:/var/www/certbot

  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   restart: unless-stopped
  #   networks:
  #     - webnet

  # certbot:
  #   image: certbot/certbot:latest
  #   container_name: certbot
  #   volumes:
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   entrypoint: ""
  #   command: >
  #     sh -c "
  #     if [ ! -f /etc/letsencrypt/live/lumeko.ru/fullchain.pem ]; then
  #       certbot certonly --webroot -w /var/www/certbot --email uksm.vas@mail.ru -d lumeko.ru --agree-tos --non-interactive;
  #     else
  #       certbot renew --quiet;
  #     fi"
  #   depends_on:
  #     - nginx
  #   networks:
  #     - webnet

volumes:
  sqlite_data:
  rails_storage:
#   bundle_cache:

# networks:
#   webnet:
#     driver: bridge
